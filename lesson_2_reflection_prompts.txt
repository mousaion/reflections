What happens when you initialize a repository? Why do you need to do it?

You setup the files git needs to keep track of your project, but without recording anything about that project. You do it because then you can start using git. 


How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is a record of the changes in the working directory and how those changes differ from the current repository. This allows you to more closely monitor the current changes before you make your next commit. 


How can you use the staging area to make sure you have one commit per logical
change?

You can add only the files pertaining to the logical change and then commit those files. Any additional files that have been changed can be added and committed separately. 


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches would be useful when you have a working or published version that you want to keep easily accessible as a demo while you add extra features, etc. Or if you want to experiment or make major changes while keeping master as your main version. 


How do the diagrams help you visualize the branch structure?

They help you trace back the parent/child relationship between commits.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging two branches combines any changes while exlcuding any deletions from the ancestral parent. In the diagram, you just add a new shared child node from the heads of two merged branches. This shows that all nodes are retained. 


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

The pros are that it saves time. The cons are that it might miss conflicts.

